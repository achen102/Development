{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anniechen/Documents/CSCI1300/development/src/DisplayList.js\";\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport './DisplayList.css';\nimport { Card } from '@material-ui/core';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport SpaIcon from '@material-ui/icons/Spa';\nimport FaceIcon from '@material-ui/icons/Face';\nexport default class DisplayList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addtoAggregator = item => {\n      if (this.state.nameList.includes(item.name) === false) {\n        this.setState({\n          aggregatedList: [...this.state.aggregatedList, item]\n        });\n        this.setState({\n          topicList: [...this.state.topicList, item.topic]\n        });\n        this.setState({\n          nameList: [...this.state.nameList, item.name]\n        });\n      } else {}\n\n      this.setState({\n        clicked: false\n      });\n    };\n\n    this.removefromAggregator = item => {\n      this.setState({\n        aggregatedList: this.state.aggregatedList.filter(function (ele) {\n          return ele !== item;\n        })\n      });\n      this.setState({\n        topicList: this.state.topicList.filter(function (ele) {\n          return ele !== item.topic;\n        })\n      });\n      this.setState({\n        nameList: this.state.nameList.filter(function (ele) {\n          return ele !== item.name;\n        })\n      });\n      this.setState({\n        clicked: false\n      });\n    };\n\n    this.checkTopic = () => {\n      if (this.state.topicList.includes(\"biology\")) {\n        if (this.state.topicList.includes(\"design\")) {\n          if (this.state.topicList.includes(\"psychology\")) {\n            this.setState({\n              popup: \"Within the intersection of biology, design, and psychology, I'm really interested in sustainable design, as well as biodesign and biomimicry.\"\n            });\n          } else {\n            this.setState({\n              popup: \"Within the intersection of biology and design, I'm really interested in sustainable design, as well as biodesign and biomimicry in the context of sustainable systems and space systems design.\"\n            });\n          }\n        } else if (this.state.topicList.includes(\"psychology\") === true) {\n          this.setState({\n            popup: \"Within the intersection of biology and psychology, I'm really interested in the psychology & mindset of sustainability, and how that can be translated through design\"\n          });\n        } else {\n          this.setState({\n            popup: \"add 2 or more symbols to see the connections!\"\n          });\n        }\n      } else if (this.state.topicList.includes(\"design\") === true) {\n        if (this.state.topicList.includes(\"psychology\") === true) {\n          this.setState({\n            popup: \"Within the intersection of design and psychology, I'm really interested in designing with humans in mind--whether that be user experience design, the process-oriented design process, or the application of heuristics & decision-making to design research.\"\n          });\n        } else {\n          this.setState({\n            popup: \"add 2 or more symbols to see the connections!\"\n          });\n        }\n      } else if (this.state.topicList.includes(\"psychology\") === true) {\n        this.setState({\n          popup: \"Add 2 or more symbols to see the connections!\"\n        });\n      } else {\n        this.setState({\n          popup: \"Add 2 or more symbols to see the connections!\"\n        });\n      }\n    };\n\n    this.addtoAggregator = this.addtoAggregator.bind(this);\n    this.removefromAggregator = this.removefromAggregator.bind(this);\n    this.state = {\n      aggregatedList: [],\n      topicList: [],\n      nameList: [],\n      click: props.clicked,\n      popup: \"\"\n    };\n  } // componentDidUpdate(props){\n  //     console.log(this.state.aggregatedList);\n  //     console.log(this.state.topicList);\n  //     console.log(this.state.nameList);\n  //     console.log(this.state.popup);\n  // }\n  //method that adds item to the aggregatedList, the item's topic to the topicList, and the item's name to the nameList; does not add item to aggregatedList if it already contains the item \n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"rows\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: \"700px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"gridwrap\",\n          children: this.props.list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"cardwrap\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"200px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  class: \"card-title\",\n                  align: \"center\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                class: \"list-group list-group-flush\",\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"list-group-item\",\n                  align: \"center\",\n                  children: [item.topic, \", \", item.year]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body\",\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => this.addtoAggregator(item),\n                  variant: \"contained\",\n                  color: \"primary\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 29\n                }, this), ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        class: \"bigcard\",\n        style: {\n          width: 500\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"gridwrap\",\n          children: this.state.aggregatedList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"cardwrap\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"200px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"card-img-top\",\n                src: item.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                class: \"card-title\",\n                align: \"center\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body\",\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => this.removefromAggregator(item),\n                  variant: \"outlined\",\n                  color: \"secondary\",\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 29\n                }, this), ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"aggregator-total\",\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              margin: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"symbolcard\",\n              style: {\n                height: 200\n              },\n              children: this.state.aggregatedList.map(item => {\n                if (item.topic === \"biology\") {\n                  return /*#__PURE__*/_jsxDEV(SpaIcon, {\n                    fontSize: \"large\",\n                    style: {\n                      margin: \"auto\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 36\n                  }, this);\n                } else if (item.topic === \"psychology\") {\n                  return /*#__PURE__*/_jsxDEV(FaceIcon, {\n                    fontSize: \"large\",\n                    style: {\n                      margin: \"auto\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 36\n                  }, this);\n                } else if (item.topic === \"design\") {\n                  return /*#__PURE__*/_jsxDEV(ColorLensIcon, {\n                    fontSize: \"large\",\n                    style: {\n                      margin: \"auto\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 36\n                  }, this);\n                } else {}\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.checkTopic(),\n            variant: \"contained\",\n            children: \"Look for Connections!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"card-title\",\n              align: \"center\",\n              children: this.state.popup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/anniechen/Documents/CSCI1300/development/src/DisplayList.js"],"names":["React","Button","Card","ColorLensIcon","SpaIcon","FaceIcon","DisplayList","Component","constructor","props","addtoAggregator","item","state","nameList","includes","name","setState","aggregatedList","topicList","topic","clicked","removefromAggregator","filter","ele","checkTopic","popup","bind","click","render","width","list","map","image","year","margin","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button} from '@material-ui/core';\nimport './DisplayList.css';\nimport {Card} from '@material-ui/core';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport SpaIcon from '@material-ui/icons/Spa';\nimport FaceIcon from '@material-ui/icons/Face';\n\n\n\nexport default class DisplayList extends React.Component {\n    constructor(props){\n        super(props);\n        this.addtoAggregator = this.addtoAggregator.bind(this);\n        this.removefromAggregator = this.removefromAggregator.bind(this);\n        this.state= {\n            aggregatedList:[],\n            topicList:[],\n            nameList:[],\n            click: props.clicked,\n            popup:\"\"\n        }\n    }\n\n    // componentDidUpdate(props){\n    //     console.log(this.state.aggregatedList);\n    //     console.log(this.state.topicList);\n    //     console.log(this.state.nameList);\n    //     console.log(this.state.popup);\n        \n    // }\n    \n    //method that adds item to the aggregatedList, the item's topic to the topicList, and the item's name to the nameList; does not add item to aggregatedList if it already contains the item \n    addtoAggregator = (item) => {\n        if (this.state.nameList.includes(item.name)===false){\n        this.setState({aggregatedList:[...this.state.aggregatedList, item]})\n        this.setState({topicList:[...this.state.topicList, item.topic]})\n        this.setState({nameList:[...this.state.nameList, item.name]})\n        }else{\n        }\n        this.setState({clicked: false})\n        \n        \n    }\n\n    //method that removes item from the aggregatedList, the item's topic from the topicList, and the item's name from the nameList\n    removefromAggregator = (item) =>{\n        this.setState({aggregatedList: this.state.aggregatedList.filter(function(ele){\n            return ele !== item;\n        })});\n        this.setState({topicList: this.state.topicList.filter(function(ele){\n            return ele !== item.topic;\n        })});\n        this.setState({nameList: this.state.nameList.filter(function(ele){\n            return ele !== item.name;\n        })});\n        this.setState({clicked: false})\n       \n    }\n\n    //checks if the topicList includes the topic combination, and determines the text (popup state) that pops up with each combo of topics \n    checkTopic = () =>{\n        if (this.state.topicList.includes(\"biology\")){\n            if (this.state.topicList.includes(\"design\")){\n                if (this.state.topicList.includes(\"psychology\")){\n                    this.setState({popup: \"Within the intersection of biology, design, and psychology, I'm really interested in sustainable design, as well as biodesign and biomimicry.\"})\n                }else{\n                    this.setState({popup: \"Within the intersection of biology and design, I'm really interested in sustainable design, as well as biodesign and biomimicry in the context of sustainable systems and space systems design.\"})\n                }\n            }else if (this.state.topicList.includes(\"psychology\")=== true){\n                this.setState({popup: \"Within the intersection of biology and psychology, I'm really interested in the psychology & mindset of sustainability, and how that can be translated through design\"})\n            }else {\n                this.setState({popup:\"add 2 or more symbols to see the connections!\"})\n            }\n        }\n        else if (this.state.topicList.includes(\"design\")=== true){\n            if (this.state.topicList.includes(\"psychology\")=== true){\n                this.setState({popup: \"Within the intersection of design and psychology, I'm really interested in designing with humans in mind--whether that be user experience design, the process-oriented design process, or the application of heuristics & decision-making to design research.\"})\n            }else {\n                this.setState({popup:\"add 2 or more symbols to see the connections!\"})\n            }\n        }\n        else if (this.state.topicList.includes(\"psychology\")=== true){\n            this.setState({popup: \"Add 2 or more symbols to see the connections!\"})\n        \n        }else{\n            this.setState({popup:\"Add 2 or more symbols to see the connections!\"})\n        }\n    }\n\n    render(){\n        return(\n            <div class = \"rows\">\n                <Card style = {{width: \"700px\"}}>\n                    <div class = \"gridwrap\">\n                        {this.props.list.map((item) => \n                        <div class = \"cardwrap\">\n                        \n                        <Card style = {{width: \"200px\"}} >\n                        \n                            <img src = {item.image}/> \n                            <div class=\"card-body\">\n                                <h5 class=\"card-title\" align= \"center\" >{item.name}</h5>\n                            </div>\n                            <ul class=\"list-group list-group-flush\">\n                                <li class=\"list-group-item\" align= \"center\">{item.topic}, {item.year}</li>\n                                \n                            </ul>\n                            <div class = \"card-body\" align= \"center\">\n                            <Button onClick={()=> this.addtoAggregator(item) }  variant = \"contained\" color = \"primary\">Add</Button>{' '}\n                            \n                            </div> \n                        </Card>\n                        </div>\n                       \n                        )}\n                    </div>\n                </Card>\n                \n                <Card class = \"bigcard\" style = {{width: 500}}>\n                    <div class = \"gridwrap\">\n                        \n                        {this.state.aggregatedList.map((item) => \n                        <div class = \"cardwrap\">\n                        <Card style = {{width: \"200px\"}}>\n                            <img class=\"card-img-top\" src = {item.image}/> \n                            <h5 class=\"card-title\" align= \"center\" >{item.name}</h5>\n                            <div class = \"card-body\" align= \"center\">\n                            <Button onClick={()=> this.removefromAggregator(item) }  variant = \"outlined\" color = \"secondary\">Remove</Button>{' '}\n                            </div>\n\n                        </Card>\n                        </div>\n                        )}\n                    </div>\n                    <div class = \"aggregator-total\">\n                    <Card style = {{margin: \"auto\"}}>\n                        <div class= \"symbolcard\" style = {{height: 200}}>\n                        {this.state.aggregatedList.map((item)=>\n\n                        {if (item.topic === \"biology\"){\n                            return <SpaIcon fontSize= \"large\" style= {{margin: \"auto\"}}/>\n                        } else if (item.topic === \"psychology\"){\n                            return <FaceIcon fontSize= \"large\" style= {{margin: \"auto\"}}/>\n                        } else if (item.topic === \"design\"){\n                            return <ColorLensIcon fontSize= \"large\" style= {{margin: \"auto\"}}/>\n                        } else {\n                        }\n                        \n                        })}\n                        </div>\n                    </Card>\n                    <Button onClick={()=> this.checkTopic()}  variant = \"contained\" >Look for Connections!</Button>{' '}\n                    <Card>\n                    <h5 class=\"card-title\" align= \"center\" >{this.state.popup}</h5>\n                    </Card>\n                    </div>\n                    \n                </Card>\n            </div>\n                \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}