{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anniechen/Documents/CSCI1300/development/src/DisplayList.js\";\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport AggregatedList from './AggregatedList';\nimport './DisplayList.css';\nimport { Card } from '@material-ui/core';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport SpaIcon from '@material-ui/icons/Spa';\nimport FaceIcon from '@material-ui/icons/Face';\nexport default class DisplayList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addtoAggregator = item => {\n      this.setState({\n        aggregatedList: [...this.state.aggregatedList, item]\n      });\n      this.setState({\n        topicList: [...this.state.topicList, item.topic]\n      });\n      this.setState({\n        clicked: false\n      });\n    };\n\n    this.removefromAggregator = item => {\n      this.setState({\n        aggregatedList: this.state.aggregatedList.filter(function (ele) {\n          return ele !== item;\n        })\n      });\n      this.setState({\n        topicList: this.state.topicList.filter(function (ele) {\n          return ele !== item;\n        })\n      });\n      this.setState({\n        clicked: false\n      });\n    };\n\n    this.checkTopic = () => {\n      if (this.state.topicList.includes(\"biology\", \"psychology\") === true) {\n        this.setState({\n          popup: \"Psych+Bio\"\n        });\n      } else if (this.state.topicList.includes(\"biology\", \"design\") === true) {\n        this.setState({\n          popup: \"bio+design\"\n        });\n      } else if (this.state.topicList.includes(\"psychology\", \"design\") === true) {\n        this.setState({\n          popup: \"psych+design\"\n        });\n      } else {}\n    };\n\n    this.addtoAggregator = this.addtoAggregator.bind(this);\n    this.removefromAggregator = this.removefromAggregator.bind(this);\n    this.state = {\n      aggregatedList: [],\n      topicList: [],\n      click: props.clicked,\n      popup: \"Add 2 or more items to see the connections!\"\n    };\n  }\n\n  componentDidUpdate(props) {\n    console.log(this.state.aggregatedList);\n    console.log(this.state.topicList);\n  } //method that adds item to the aggregatedList\n\n\n  setClicked() {\n    this.setState({\n      clicked: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"rows\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: \"900px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"gridwrap\",\n          children: this.props.list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"cardwrap\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"200px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"card-img-top\",\n                src: item.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  class: \"card-title\",\n                  align: \"center\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                class: \"list-group list-group-flush\",\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"list-group-item\",\n                  align: \"center\",\n                  children: [item.topic, \", \", item.year]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body\",\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => this.addtoAggregator(item),\n                  variant: \"outline-primary\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 29\n                }, this), ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        class: \"bigcard\",\n        style: {\n          width: 500\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"gridwrap\",\n          children: this.state.aggregatedList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"cardwrap\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"200px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"card-img-top\",\n                src: item.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                class: \"card-title\",\n                align: \"center\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body\",\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => this.addtoAggregator(item),\n                  variant: \"outline-primary\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 29\n                }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => this.removefromAggregator(item),\n                  variant: \"outline-primary\",\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 29\n                }, this), ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [this.state.aggregatedList.map(item => {\n            if (item.topic === \"biology\") {\n              return /*#__PURE__*/_jsxDEV(SpaIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 36\n              }, this);\n            } else if (item.topic === \"psychology\") {\n              return /*#__PURE__*/_jsxDEV(FaceIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 36\n              }, this);\n            } else if (item.topic === \"design\") {\n              return /*#__PURE__*/_jsxDEV(ColorLensIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 36\n              }, this);\n            } else {}\n          }), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.checkTopic(),\n            variant: \"outline-primary\",\n            children: \"Look for Connections!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            class: \"card-title\",\n            align: \"center\",\n            children: this.state.popup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/anniechen/Documents/CSCI1300/development/src/DisplayList.js"],"names":["React","Button","AggregatedList","Card","ColorLensIcon","SpaIcon","FaceIcon","DisplayList","Component","constructor","props","addtoAggregator","item","setState","aggregatedList","state","topicList","topic","clicked","removefromAggregator","filter","ele","checkTopic","includes","popup","bind","click","componentDidUpdate","console","log","setClicked","render","width","list","map","image","name","year"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button} from '@material-ui/core';\nimport AggregatedList from './AggregatedList';\nimport './DisplayList.css';\nimport {Card} from '@material-ui/core';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport SpaIcon from '@material-ui/icons/Spa';\nimport FaceIcon from '@material-ui/icons/Face';\n\n\nexport default class DisplayList extends React.Component {\n    constructor(props){\n        super(props);\n        this.addtoAggregator = this.addtoAggregator.bind(this);\n        this.removefromAggregator = this.removefromAggregator.bind(this);\n        this.state= {\n            aggregatedList:[],\n            topicList:[],\n            click: props.clicked,\n            popup: \"Add 2 or more items to see the connections!\"\n        }\n    }\n\n    componentDidUpdate(props){\n        console.log(this.state.aggregatedList);\n        console.log(this.state.topicList);\n        \n    }\n    \n    //method that adds item to the aggregatedList\n    addtoAggregator = (item) => {\n        this.setState({aggregatedList:[...this.state.aggregatedList, item]})\n        this.setState({topicList:[...this.state.topicList, item.topic]})\n        this.setState({clicked: false})\n    }\n\n    //method that removes item from the aggregatedList\n\n\n    removefromAggregator = (item) =>{\n        this.setState({aggregatedList: this.state.aggregatedList.filter(function(ele){\n            return ele !== item;\n        })});\n        this.setState({topicList: this.state.topicList.filter(function(ele){\n            return ele !== item;\n        })});\n        this.setState({clicked: false})\n       \n    }\n    //checks if the topicList includes the topic that is passed in, and determines the text that pops up with each combo of topics\n    checkTopic = () =>{\n        if (this.state.topicList.includes(\"biology\", \"psychology\")=== true){\n            this.setState({popup: \"Psych+Bio\"})\n        }else if (this.state.topicList.includes(\"biology\", \"design\")=== true){\n            this.setState({popup: \"bio+design\"})\n        }else if (this.state.topicList.includes(\"psychology\", \"design\")=== true){\n            this.setState({popup: \"psych+design\"})\n        }else{\n\n        }\n    }\n\n    setClicked(){\n        this.setState({clicked: true});\n    }\n\n    render(){\n        return(\n            <div class = \"rows\">\n                <Card style = {{width: \"900px\"}}>\n                    <div class = \"gridwrap\">\n                        {this.props.list.map((item) => \n                        <div class = \"cardwrap\">\n                        <Card style = {{width: \"200px\"}} >\n                            <img class=\"card-img-top\" src = {item.image}/> \n                            <div class=\"card-body\">\n                                <h5 class=\"card-title\" align= \"center\" >{item.name}</h5>\n                            </div>\n                            <ul class=\"list-group list-group-flush\">\n                                <li class=\"list-group-item\" align= \"center\">{item.topic}, {item.year}</li>\n                            </ul>\n                            <div class = \"card-body\" align= \"center\">\n                            <Button onClick={()=> this.addtoAggregator(item) }  variant = \"outline-primary\" >Add</Button>{' '}\n                            </div> \n                        </Card>\n                        </div>\n                        )}\n                    </div>\n                </Card>\n\n               \n                {/* <AggregatedList newlist = {this.state.aggregatedList} addtoAggregator ={this.addtoAggregator} removefromAggregator = {this.removefromAggregator}/> */}\n                <Card class = \"bigcard\" style = {{width: 500}}>\n                    <div class = \"gridwrap\">\n                        \n                        {this.state.aggregatedList.map((item) => \n                        <div class = \"cardwrap\">\n                        <Card style = {{width: \"200px\"}}>\n                            <img class=\"card-img-top\" src = {item.image}/> \n                            <h5 class=\"card-title\" align= \"center\" >{item.name}</h5>\n                            <div class = \"card-body\" align= \"center\">\n                            <Button onClick={()=> this.addtoAggregator(item) }  variant = \"outline-primary\" >Add</Button>{' '}\n                            <Button onClick={()=> this.removefromAggregator(item) }  variant = \"outline-primary\" >Remove</Button>{' '}\n                            </div> \n\n                        </Card>\n                        </div>\n                        )}\n                    </div>\n\n                    <Card>\n                        \n                        {this.state.aggregatedList.map((item)=>\n\n                        {if (item.topic === \"biology\"){\n                            return <SpaIcon/>\n                        } else if (item.topic === \"psychology\"){\n                            return <FaceIcon/>\n                        } else if (item.topic === \"design\"){\n                            return <ColorLensIcon/>\n                        } else {\n                        }\n                        \n                        })}\n                        <Button onClick={()=> this.checkTopic()}  variant = \"outline-primary\" >Look for Connections!</Button>{' '}\n                    </Card>\n                    <Card>\n                    <h5 class=\"card-title\" align= \"center\" >{this.state.popup}</h5>\n                    </Card>\n                </Card>\n            </div>\n                \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}