{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anniechen/Documents/CSCI1300/development/src/DisplayList.js\";\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport AggregatedList from './AggregatedList';\nimport './DisplayList.css';\nimport { Card } from '@material-ui/core';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport SpaIcon from '@material-ui/icons/Spa';\nimport FaceIcon from '@material-ui/icons/Face';\nexport default class DisplayList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addtoAggregator = item => {\n      if (this.state.nameList.includes(item.name) === false) {\n        this.setState({\n          aggregatedList: [...this.state.aggregatedList, item]\n        });\n        this.setState({\n          topicList: [...this.state.topicList, item.topic]\n        });\n        this.setState({\n          nameList: [...this.state.nameList, item.name]\n        });\n      } else {}\n\n      this.setState({\n        clicked: false\n      });\n    };\n\n    this.removefromAggregator = item => {\n      this.setState({\n        aggregatedList: this.state.aggregatedList.filter(function (ele) {\n          return ele !== item;\n        })\n      });\n      this.setState({\n        topicList: this.state.topicList.filter(function (ele) {\n          return ele !== item.topic;\n        })\n      });\n      this.setState({\n        nameList: this.state.nameList.filter(function (ele) {\n          return ele !== item.name;\n        })\n      });\n      this.setState({\n        clicked: false\n      });\n    };\n\n    this.checkTopic = () => {\n      if (this.state.topicList.includes(\"biology\") === true) {\n        if (this.state.topicList.includes(\"biology\", \"psychology\", \"design\") === true) {\n          this.setState({\n            popup: \"Psych+Bio+design\"\n          });\n        } else if (this.state.topicList.includes(\"biology\", \"design\") === true) {\n          this.setState({\n            popup: \"bio+design\"\n          });\n        } else if (this.state.topicList.includes(\"biology\", \"psych\") === true) {\n          this.setState({\n            popup: \"bio+psych\"\n          });\n        } else {\n          this.setState(\"add 2 or more symbols to see the connections!\");\n        }\n      } else if (this.state.topicList.includes(\"design\") === true) {\n        if (this.state.topicList.includes(\"design\", \"psychology\") === true) {\n          this.setState({\n            popup: \"Psych+design\"\n          });\n        } else {\n          this.setState(\"add 2 or more symbols to see the connections!\");\n        }\n      }\n\n      if (this.state.topicList.includes(\"biology\", \"psychology\") === true) {\n        this.setState({\n          popup: \"Psych+Bio\"\n        });\n      } else if (this.state.topicList.includes(\"biology\", \"design\") === true) {\n        this.setState({\n          popup: \"bio+design\"\n        });\n      } else if (this.state.topicList.includes(\"psychology\", \"design\") === true) {\n        this.setState({\n          popup: \"psych+design\"\n        });\n      } else {\n        this.setState({\n          popup: \"Add 2 or more items to see the connections!\"\n        });\n      }\n    };\n\n    this.addtoAggregator = this.addtoAggregator.bind(this);\n    this.removefromAggregator = this.removefromAggregator.bind(this);\n    this.state = {\n      aggregatedList: [],\n      topicList: [],\n      nameList: [],\n      click: props.clicked,\n      popup: \"hi\"\n    };\n  }\n\n  componentDidUpdate(props) {\n    console.log(this.state.aggregatedList);\n    console.log(this.state.topicList);\n    console.log(this.state.nameList);\n    console.log(this.state.popup);\n  } //method that adds item to the aggregatedList, the item's topic to the topicList, and the item's name to the nameList; does not add item to aggregatedList if it already contains the item \n\n\n  setClicked() {\n    this.setState({\n      clicked: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"rows\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: \"700px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"gridwrap\",\n          children: this.props.list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"cardwrap\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"200px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"card-img-top\",\n                src: item.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  class: \"card-title\",\n                  align: \"center\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                class: \"list-group list-group-flush\",\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"list-group-item\",\n                  align: \"center\",\n                  children: [item.topic, \", \", item.year]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body\",\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => this.addtoAggregator(item),\n                  variant: \"outline-primary\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 29\n                }, this), ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        class: \"bigcard\",\n        style: {\n          width: 500\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"gridwrap\",\n          children: this.state.aggregatedList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"cardwrap\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"200px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                class: \"card-img-top\",\n                src: item.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                class: \"card-title\",\n                align: \"center\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => this.removefromAggregator(item),\n                variant: \"outline-primary\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 29\n              }, this), ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"aggregator-total\",\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [this.state.aggregatedList.map(item => {\n              if (item.topic === \"biology\") {\n                return /*#__PURE__*/_jsxDEV(SpaIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 36\n                }, this);\n              } else if (item.topic === \"psychology\") {\n                return /*#__PURE__*/_jsxDEV(FaceIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 36\n                }, this);\n              } else if (item.topic === \"design\") {\n                return /*#__PURE__*/_jsxDEV(ColorLensIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 36\n                }, this);\n              } else {}\n            }), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.checkTopic(),\n              variant: \"outline-primary\",\n              children: \"Look for Connections!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"card-title\",\n              align: \"center\",\n              children: this.state.popup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/anniechen/Documents/CSCI1300/development/src/DisplayList.js"],"names":["React","Button","AggregatedList","Card","ColorLensIcon","SpaIcon","FaceIcon","DisplayList","Component","constructor","props","addtoAggregator","item","state","nameList","includes","name","setState","aggregatedList","topicList","topic","clicked","removefromAggregator","filter","ele","checkTopic","popup","bind","click","componentDidUpdate","console","log","setClicked","render","width","list","map","image","year"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button} from '@material-ui/core';\nimport AggregatedList from './AggregatedList';\nimport './DisplayList.css';\nimport {Card} from '@material-ui/core';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport SpaIcon from '@material-ui/icons/Spa';\nimport FaceIcon from '@material-ui/icons/Face';\n\n\nexport default class DisplayList extends React.Component {\n    constructor(props){\n        super(props);\n        this.addtoAggregator = this.addtoAggregator.bind(this);\n        this.removefromAggregator = this.removefromAggregator.bind(this);\n        this.state= {\n            aggregatedList:[],\n            topicList:[],\n            nameList:[],\n            click: props.clicked,\n            popup: \"hi\"\n        }\n    }\n\n    componentDidUpdate(props){\n        console.log(this.state.aggregatedList);\n        console.log(this.state.topicList);\n        console.log(this.state.nameList);\n        console.log(this.state.popup);\n        \n    }\n    \n    //method that adds item to the aggregatedList, the item's topic to the topicList, and the item's name to the nameList; does not add item to aggregatedList if it already contains the item \n    addtoAggregator = (item) => {\n        if (this.state.nameList.includes(item.name)===false){\n        this.setState({aggregatedList:[...this.state.aggregatedList, item]})\n        this.setState({topicList:[...this.state.topicList, item.topic]})\n        this.setState({nameList:[...this.state.nameList, item.name]})\n        \n        }else{\n\n        }\n        this.setState({clicked: false})\n        \n        \n    }\n\n    //method that removes item from the aggregatedList, the item's topic from the topicList, and the item's name from the nameList\n    removefromAggregator = (item) =>{\n        this.setState({aggregatedList: this.state.aggregatedList.filter(function(ele){\n            return ele !== item;\n        })});\n        this.setState({topicList: this.state.topicList.filter(function(ele){\n            return ele !== item.topic;\n        })});\n        this.setState({nameList: this.state.nameList.filter(function(ele){\n            return ele !== item.name;\n        })});\n        this.setState({clicked: false})\n       \n    }\n\n    //checks if the topicList includes the topic combination, and determines the text (popup state) that pops up with each combo of topics\n    checkTopic = () =>{\n        if (this.state.topicList.includes(\"biology\")=== true){\n            if (this.state.topicList.includes(\"biology\", \"psychology\", \"design\")=== true){\n                this.setState({popup: \"Psych+Bio+design\"})\n            }else if (this.state.topicList.includes(\"biology\", \"design\")=== true){\n                this.setState({popup: \"bio+design\"})\n            }else if (this.state.topicList.includes(\"biology\", \"psych\")=== true){\n                this.setState({popup: \"bio+psych\"})\n            }else {\n                this.setState(\"add 2 or more symbols to see the connections!\")\n            }\n        }\n        else if (this.state.topicList.includes(\"design\")=== true){\n            if (this.state.topicList.includes(\"design\", \"psychology\")=== true){\n                this.setState({popup: \"Psych+design\"})\n            }else {\n                this.setState(\"add 2 or more symbols to see the connections!\")\n            }\n        }\n        if (this.state.topicList.includes(\"biology\", \"psychology\")=== true){\n            this.setState({popup: \"Psych+Bio\"})\n        }else if (this.state.topicList.includes(\"biology\", \"design\")=== true){\n            this.setState({popup: \"bio+design\"})\n        }else if (this.state.topicList.includes(\"psychology\", \"design\")=== true){\n            this.setState({popup: \"psych+design\"})\n        }else{\n            this.setState({popup:\"Add 2 or more items to see the connections!\"})\n        }\n    }\n\n\n    setClicked(){\n        this.setState({clicked: true});\n    }\n\n    render(){\n        return(\n            <div class = \"rows\">\n                <Card style = {{width: \"700px\"}}>\n                    <div class = \"gridwrap\">\n                        {this.props.list.map((item) => \n                        <div class = \"cardwrap\">\n                        <Card style = {{width: \"200px\"}} >\n                            <img class=\"card-img-top\" src = {item.image}/> \n                            <div class=\"card-body\">\n                                <h5 class=\"card-title\" align= \"center\" >{item.name}</h5>\n                            </div>\n                            <ul class=\"list-group list-group-flush\">\n                                <li class=\"list-group-item\" align= \"center\">{item.topic}, {item.year}</li>\n                            </ul>\n                            <div class = \"card-body\" align= \"center\">\n                            <Button onClick={()=> this.addtoAggregator(item) }  variant = \"outline-primary\" >Add</Button>{' '}\n                            </div> \n                        </Card>\n                        </div>\n                        )}\n                    </div>\n                </Card>\n\n               \n                {/* <AggregatedList newlist = {this.state.aggregatedList} addtoAggregator ={this.addtoAggregator} removefromAggregator = {this.removefromAggregator}/> */}\n                <Card class = \"bigcard\" style = {{width: 500}}>\n                    <div class = \"gridwrap\">\n                        \n                        {this.state.aggregatedList.map((item) => \n                        <div class = \"cardwrap\">\n                        <Card style = {{width: \"200px\"}}>\n                            <img class=\"card-img-top\" src = {item.image}/> \n                            <h5 class=\"card-title\" align= \"center\" >{item.name}</h5>\n                            \n                            <Button onClick={()=> this.removefromAggregator(item) }  variant = \"outline-primary\" >Remove</Button>{' '}\n                           \n\n                        </Card>\n                        </div>\n                        )}\n                    </div>\n                    <div class = \"aggregator-total\">\n                    <Card>\n                        \n                        {this.state.aggregatedList.map((item)=>\n\n                        {if (item.topic === \"biology\"){\n                            return <SpaIcon/>\n                        } else if (item.topic === \"psychology\"){\n                            return <FaceIcon/>\n                        } else if (item.topic === \"design\"){\n                            return <ColorLensIcon/>\n                        } else {\n                        }\n                        \n                        })}\n                        <Button onClick={()=> this.checkTopic()}  variant = \"outline-primary\" >Look for Connections!</Button>{' '}\n                    </Card>\n                    <Card>\n                    <h5 class=\"card-title\" align= \"center\" >{this.state.popup}</h5>\n                    </Card>\n                    </div>\n                </Card>\n            </div>\n                \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}